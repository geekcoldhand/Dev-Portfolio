{"ast":null,"code":"//hero\nconst heroText = document.getElementById(\"hero-text\");\nconst heroBox = document.getElementById(\"hero-box\");\n//projects\nconst cardListBox = document.getElementById(\"card-list\");\nconst allCards = document.querySelectorAll(\"cards-box\");\nconsole.log(\"type \", allCards);\n//hero animations\nconst content = \"hi, Horatious Harris here\";\n// grab each individual letter\n// let render = $(\"<span>\" + content.split(\"\").join(\"</span><span>\") + \"</span>\");\n\n// for observer obj\nlet options = {\n  rootMargin: \"0px\",\n  // % on the screen until it animates\n  threshold: 0.5\n};\n// for projects animations\nconst observer = new IntersectionObserver(entries => {\n  entries.forEach(entry => {\n    // console.log(\"isIntersecting: \", entry.isIntersecting);\n\n    if (entry.isIntersecting) {\n      console.log(\"remove\");\n      entry.target.classList.remove(\"hide-card\");\n      entry.target.classList.add(\"show-card\");\n    }\n  });\n  // console.log(\"entries Intersecting: \", entries);\n}, options);\nconsole.log(\"observer\", observer);\n// loop each DOM element to access observer\nallCards.forEach(card => observer.observe(card));\nconsole.log(\"hero script ran\");","map":{"version":3,"names":["heroText","document","getElementById","heroBox","cardListBox","allCards","querySelectorAll","console","log","content","options","rootMargin","threshold","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","classList","remove","add","card","observe"],"sources":["/Users/horatious/Desktop/Dev-Portfolio/dev-portfolio/src/js/heroScript.js"],"sourcesContent":["//hero\nconst heroText = document.getElementById(\"hero-text\");\nconst heroBox = document.getElementById(\"hero-box\");\n//projects\nconst cardListBox = document.getElementById(\"card-list\");\nconst allCards = document.querySelectorAll(\"cards-box\");\n\nconsole.log(\"type \", allCards);\n//hero animations\nconst content = \"hi, Horatious Harris here\";\n// grab each individual letter\n// let render = $(\"<span>\" + content.split(\"\").join(\"</span><span>\") + \"</span>\");\n\n// for observer obj\nlet options = {\n  rootMargin: \"0px\",\n  // % on the screen until it animates\n  threshold: 0.5,\n};\n// for projects animations\nconst observer = new IntersectionObserver((entries) => {\n  entries.forEach((entry) => {\n    // console.log(\"isIntersecting: \", entry.isIntersecting);\n\n    if (entry.isIntersecting) {\n      console.log(\"remove\");\n      entry.target.classList.remove(\"hide-card\");\n      entry.target.classList.add(\"show-card\");\n    }\n  });\n  // console.log(\"entries Intersecting: \", entries);\n}, options);\nconsole.log(\"observer\", observer);\n// loop each DOM element to access observer\nallCards.forEach((card) => observer.observe(card));\n\nconsole.log(\"hero script ran\");\n"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAGC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC;AACrD,MAAMC,OAAO,GAAGF,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC;AACnD;AACA,MAAME,WAAW,GAAGH,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC;AACxD,MAAMG,QAAQ,GAAGJ,QAAQ,CAACK,gBAAgB,CAAC,WAAW,CAAC;AAEvDC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEH,QAAQ,CAAC;AAC9B;AACA,MAAMI,OAAO,GAAG,2BAA2B;AAC3C;AACA;;AAEA;AACA,IAAIC,OAAO,GAAG;EACZC,UAAU,EAAE,KAAK;EACjB;EACAC,SAAS,EAAE;AACb,CAAC;AACD;AACA,MAAMC,QAAQ,GAAG,IAAIC,oBAAoB,CAAEC,OAAO,IAAK;EACrDA,OAAO,CAACC,OAAO,CAAEC,KAAK,IAAK;IACzB;;IAEA,IAAIA,KAAK,CAACC,cAAc,EAAE;MACxBX,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;MACrBS,KAAK,CAACE,MAAM,CAACC,SAAS,CAACC,MAAM,CAAC,WAAW,CAAC;MAC1CJ,KAAK,CAACE,MAAM,CAACC,SAAS,CAACE,GAAG,CAAC,WAAW,CAAC;IACzC;EACF,CAAC,CAAC;EACF;AACF,CAAC,EAAEZ,OAAO,CAAC;AACXH,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEK,QAAQ,CAAC;AACjC;AACAR,QAAQ,CAACW,OAAO,CAAEO,IAAI,IAAKV,QAAQ,CAACW,OAAO,CAACD,IAAI,CAAC,CAAC;AAElDhB,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}