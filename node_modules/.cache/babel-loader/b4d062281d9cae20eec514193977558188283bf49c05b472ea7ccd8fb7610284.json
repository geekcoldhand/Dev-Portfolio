{"ast":null,"code":"//hero\nvar heroText=document.getElementById(\"hero-text\");var heroBox=document.getElementById(\"hero-box\");//projects\nvar cardListBox=document.getElementById(\"card-list\");var allCards=document.querySelectorAll(\"cards-box\");console.log(\"all cards length \",allCards.length);//hero animations\nvar content=\"hi, Horatious Harris here\";// grab each individual letter\n// let render = $(\"<span>\" + content.split(\"\").join(\"</span><span>\") + \"</span>\");\n// for observer obj\nvar options={rootMargin:\"0px\",// % on the screen until it animates\nthreshold:0.5};// for projects animations\nvar observer=new IntersectionObserver(function(entries){entries.forEach(function(entry){// console.log(\"isIntersecting: \", entry.isIntersecting);\nif(entry.isIntersecting){console.log(\"card removed\");entry.target.classList.remove(\"hide-card\");entry.target.classList.add(\"show-card\");console.log(\"card shown\");}});// console.log(\"entries Intersecting: \", entries);\n},options);console.log(\"observer\",observer);// loop each DOM element to access observer\nallCards.forEach(function(card){return observer.observe(card);});console.log(\"hero script ran\");","map":{"version":3,"names":["heroText","document","getElementById","heroBox","cardListBox","allCards","querySelectorAll","console","log","length","content","options","rootMargin","threshold","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","classList","remove","add","card","observe"],"sources":["/Users/horatious/Desktop/Dev-Portfolio/src/js/heroScript.js"],"sourcesContent":["//hero\nconst heroText = document.getElementById(\"hero-text\");\nconst heroBox = document.getElementById(\"hero-box\");\n//projects\nconst cardListBox = document.getElementById(\"card-list\");\nconst allCards = document.querySelectorAll(\"cards-box\");\n\nconsole.log(\"all cards length \", allCards.length);\n//hero animations\nconst content = \"hi, Horatious Harris here\";\n// grab each individual letter\n// let render = $(\"<span>\" + content.split(\"\").join(\"</span><span>\") + \"</span>\");\n\n// for observer obj\nlet options = {\n  rootMargin: \"0px\",\n  // % on the screen until it animates\n  threshold: 0.5,\n};\n// for projects animations\nconst observer = new IntersectionObserver((entries) => {\n  entries.forEach((entry) => {\n    // console.log(\"isIntersecting: \", entry.isIntersecting);\n\n    if (entry.isIntersecting) {\n      console.log(\"card removed\");\n      entry.target.classList.remove(\"hide-card\");\n      entry.target.classList.add(\"show-card\");\n      console.log(\"card shown\");\n    }\n  });\n  // console.log(\"entries Intersecting: \", entries);\n}, options);\nconsole.log(\"observer\", observer);\n// loop each DOM element to access observer\nallCards.forEach((card) => observer.observe(card));\n\nconsole.log(\"hero script ran\");\n"],"mappings":"AAAA;AACA,GAAMA,SAAQ,CAAGC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CACrD,GAAMC,QAAO,CAAGF,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CACnD;AACA,GAAME,YAAW,CAAGH,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CACxD,GAAMG,SAAQ,CAAGJ,QAAQ,CAACK,gBAAgB,CAAC,WAAW,CAAC,CAEvDC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAEH,QAAQ,CAACI,MAAM,CAAC,CACjD;AACA,GAAMC,QAAO,CAAG,2BAA2B,CAC3C;AACA;AAEA;AACA,GAAIC,QAAO,CAAG,CACZC,UAAU,CAAE,KAAK,CACjB;AACAC,SAAS,CAAE,GACb,CAAC,CACD;AACA,GAAMC,SAAQ,CAAG,GAAIC,qBAAoB,CAAC,SAACC,OAAO,CAAK,CACrDA,OAAO,CAACC,OAAO,CAAC,SAACC,KAAK,CAAK,CACzB;AAEA,GAAIA,KAAK,CAACC,cAAc,CAAE,CACxBZ,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC,CAC3BU,KAAK,CAACE,MAAM,CAACC,SAAS,CAACC,MAAM,CAAC,WAAW,CAAC,CAC1CJ,KAAK,CAACE,MAAM,CAACC,SAAS,CAACE,GAAG,CAAC,WAAW,CAAC,CACvChB,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC,CAC3B,CACF,CAAC,CAAC,CACF;AACF,CAAC,CAAEG,OAAO,CAAC,CACXJ,OAAO,CAACC,GAAG,CAAC,UAAU,CAAEM,QAAQ,CAAC,CACjC;AACAT,QAAQ,CAACY,OAAO,CAAC,SAACO,IAAI,QAAKV,SAAQ,CAACW,OAAO,CAACD,IAAI,CAAC,GAAC,CAElDjB,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}